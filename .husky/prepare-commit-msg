# $2 contains the source of the commit message.
# It can be message, template, merge, squash, or commit (for git commit --amend)
if [ "$2" = "commit" ]; then
  echo "Skipping prepare-commit-msg hook due to amend."
  exit 0
fi

# Skip commitizen when using -m flag (commit message provided directly)
if [ "$2" = "message" ]; then
  echo "Skipping prepare-commit-msg hook due to -m flag."
  exit 0
fi

# Skip commitizen for merge commits
if [ "$2" = "merge" ]; then
  echo "Skipping prepare-commit-msg hook due to merge."
  exit 0
fi

# Skip commitizen for squash commits
if [ "$2" = "squash" ]; then
  echo "Skipping prepare-commit-msg hook due to squash."
  exit 0
fi

# If we're in the middle of an interactive rebase, GIT_SEQUENCE_EDITOR will be set.
# We'll skip the hook in this case as well.
if [ -n "$GIT_SEQUENCE_EDITOR" ]; then
  echo "Skipping prepare-commit-msg hook due to rebase."
  exit 0
fi

exec < /dev/tty && pnpm exec cz --hook || true

