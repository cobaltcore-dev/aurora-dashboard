/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as AboutImport } from "./routes/about"
import { Route as IndexImport } from "./routes/index"
import { Route as AccountsIndexImport } from "./routes/accounts/index"
import { Route as AccountsAccountIdIndexImport } from "./routes/accounts/$accountId/index"
import { Route as AccountsAccountIdProjectsIndexImport } from "./routes/accounts/$accountId/projects/index"
import { Route as AccountsAccountIdProjectsProjectIdComputeSplatImport } from "./routes/accounts/$accountId/projects_/$projectId/compute/$"

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: "/about",
  path: "/about",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const AccountsIndexRoute = AccountsIndexImport.update({
  id: "/accounts/",
  path: "/accounts/",
  getParentRoute: () => rootRoute,
} as any)

const AccountsAccountIdIndexRoute = AccountsAccountIdIndexImport.update({
  id: "/accounts/$accountId/",
  path: "/accounts/$accountId/",
  getParentRoute: () => rootRoute,
} as any)

const AccountsAccountIdProjectsIndexRoute = AccountsAccountIdProjectsIndexImport.update({
  id: "/accounts/$accountId/projects/",
  path: "/accounts/$accountId/projects/",
  getParentRoute: () => rootRoute,
} as any)

const AccountsAccountIdProjectsProjectIdComputeSplatRoute = AccountsAccountIdProjectsProjectIdComputeSplatImport.update(
  {
    id: "/accounts/$accountId/projects_/$projectId/compute/$",
    path: "/accounts/$accountId/projects/$projectId/compute/$",
    getParentRoute: () => rootRoute,
  } as any
)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/about": {
      id: "/about"
      path: "/about"
      fullPath: "/about"
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    "/accounts/": {
      id: "/accounts/"
      path: "/accounts"
      fullPath: "/accounts"
      preLoaderRoute: typeof AccountsIndexImport
      parentRoute: typeof rootRoute
    }
    "/accounts/$accountId/": {
      id: "/accounts/$accountId/"
      path: "/accounts/$accountId"
      fullPath: "/accounts/$accountId"
      preLoaderRoute: typeof AccountsAccountIdIndexImport
      parentRoute: typeof rootRoute
    }
    "/accounts/$accountId/projects/": {
      id: "/accounts/$accountId/projects/"
      path: "/accounts/$accountId/projects"
      fullPath: "/accounts/$accountId/projects"
      preLoaderRoute: typeof AccountsAccountIdProjectsIndexImport
      parentRoute: typeof rootRoute
    }
    "/accounts/$accountId/projects_/$projectId/compute/$": {
      id: "/accounts/$accountId/projects_/$projectId/compute/$"
      path: "/accounts/$accountId/projects/$projectId/compute/$"
      fullPath: "/accounts/$accountId/projects/$projectId/compute/$"
      preLoaderRoute: typeof AccountsAccountIdProjectsProjectIdComputeSplatImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/about": typeof AboutRoute
  "/accounts": typeof AccountsIndexRoute
  "/accounts/$accountId": typeof AccountsAccountIdIndexRoute
  "/accounts/$accountId/projects": typeof AccountsAccountIdProjectsIndexRoute
  "/accounts/$accountId/projects/$projectId/compute/$": typeof AccountsAccountIdProjectsProjectIdComputeSplatRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/about": typeof AboutRoute
  "/accounts": typeof AccountsIndexRoute
  "/accounts/$accountId": typeof AccountsAccountIdIndexRoute
  "/accounts/$accountId/projects": typeof AccountsAccountIdProjectsIndexRoute
  "/accounts/$accountId/projects/$projectId/compute/$": typeof AccountsAccountIdProjectsProjectIdComputeSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/about": typeof AboutRoute
  "/accounts/": typeof AccountsIndexRoute
  "/accounts/$accountId/": typeof AccountsAccountIdIndexRoute
  "/accounts/$accountId/projects/": typeof AccountsAccountIdProjectsIndexRoute
  "/accounts/$accountId/projects_/$projectId/compute/$": typeof AccountsAccountIdProjectsProjectIdComputeSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/about"
    | "/accounts"
    | "/accounts/$accountId"
    | "/accounts/$accountId/projects"
    | "/accounts/$accountId/projects/$projectId/compute/$"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/about"
    | "/accounts"
    | "/accounts/$accountId"
    | "/accounts/$accountId/projects"
    | "/accounts/$accountId/projects/$projectId/compute/$"
  id:
    | "__root__"
    | "/"
    | "/about"
    | "/accounts/"
    | "/accounts/$accountId/"
    | "/accounts/$accountId/projects/"
    | "/accounts/$accountId/projects_/$projectId/compute/$"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AccountsIndexRoute: typeof AccountsIndexRoute
  AccountsAccountIdIndexRoute: typeof AccountsAccountIdIndexRoute
  AccountsAccountIdProjectsIndexRoute: typeof AccountsAccountIdProjectsIndexRoute
  AccountsAccountIdProjectsProjectIdComputeSplatRoute: typeof AccountsAccountIdProjectsProjectIdComputeSplatRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AccountsIndexRoute: AccountsIndexRoute,
  AccountsAccountIdIndexRoute: AccountsAccountIdIndexRoute,
  AccountsAccountIdProjectsIndexRoute: AccountsAccountIdProjectsIndexRoute,
  AccountsAccountIdProjectsProjectIdComputeSplatRoute: AccountsAccountIdProjectsProjectIdComputeSplatRoute,
}

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/accounts/",
        "/accounts/$accountId/",
        "/accounts/$accountId/projects/",
        "/accounts/$accountId/projects_/$projectId/compute/$"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/accounts/": {
      "filePath": "accounts/index.tsx"
    },
    "/accounts/$accountId/": {
      "filePath": "accounts/$accountId/index.tsx"
    },
    "/accounts/$accountId/projects/": {
      "filePath": "accounts/$accountId/projects/index.tsx"
    },
    "/accounts/$accountId/projects_/$projectId/compute/$": {
      "filePath": "accounts/$accountId/projects_/$projectId/compute/$.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
